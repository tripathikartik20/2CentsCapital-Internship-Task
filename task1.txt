# Stock Trading Strategy Toolkit

## Overview

This toolkit provides Python-based support for backtesting your stock trading strategies. It incorporates advanced technical analysis indicators like Relative Strength Index (RSI), Moving Average Convergence Divergence (MACD), and Bollinger Bands to help you analyze potential trading opportunities. By defining specific conditions, it generates buy and sell signals and evaluates their performance using metrics such as total return, annual return, Sharpe ratio, and maximum drawdown.

## Prerequisites

Before using the toolkit, ensure you have the following prerequisites installed:

- Python 3.x
- Required Python packages (install via pip):
  - yfinance
  - pandas
  - numpy
  - matplotlib

You can install these packages by running the following command:

```
pip install -r requirements.txt
```

## Usage

1. **Select Stocks**: Modify the `stocks` list with the symbols of the stocks you want to analyze. Make sure to include the appropriate suffixes (e.g., `'RELIANCE.NS'`, `'TCS.NS'`) for Indian stocks.

2. **Define Timeframe**: Adjust the `start_date` and `end_date` variables to specify the historical data timeframe you're interested in.

3. **Execute the Script**: Run the Python script (`stock_trading_strategy.py`) in your Python environment.

4. **Review Results**: The script will generate buy and sell signals based on the selected technical indicators, conduct a backtest of the trading strategy, evaluate performance metrics, and provide visual representations for each stock.

5. **Save Results**: Performance reports and result plots are saved as CSV files and PNG images, respectively.

## Functionality

### 1. Data Retrieval

The script fetches historical stock price data from Yahoo Finance using the `yfinance` library.

### 2. Technical Indicator Calculation

- **RSI (Relative Strength Index)**: Calculates RSI values based on closing prices.
- **MACD (Moving Average Convergence Divergence)**: Computes MACD and Signal Line values using exponential moving averages.
- **Bollinger Bands**: Determines the Simple Moving Average (SMA), Upper Bollinger Band, and Lower Bollinger Band.

### 3. Signal Generation

Buy and sell signals are generated based on predefined conditions using RSI, MACD, and Bollinger Bands.

### 4. Backtesting

The trading strategy is backtested by simulating buy and sell actions and tracking portfolio value over time.

### 5. Performance Evaluation

Various performance metrics, including total return, annual return, Sharpe ratio, and maximum drawdown, are computed.

### 6. Reporting and Visualization

Performance reports and trading results are visualized through plots for each stock.

## Files

- `stock_trading_strategy.py`: Main Python script for backtesting trading strategies.
- `task1.csv`: CSV file containing performance reports for all analyzed stocks.